%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (qrcode.eps)
%%CreationDate: (2016-08-13T00:47:51+09:00)
%%BoundingBox: -0 -0 123 123
%%HiResBoundingBox: 0 0 123.034 123
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 123 123
userdict begin
DisplayImage
0 0
123.034 123.034
12
123 123
1
1
1
1
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFF000
007FF81F81C0FC0FC00001FFE0FFF000007FF81F81C0FC0FC00001FFE0FFF000007FF81F81C0FC
0FC00001FFE0FFF1FFFC71F8E3FFFF0381C7FFF1FFE0FFF1FFFC71F8E3FFFF0381C7FFF1FFE0FF
F1FFFC71F8E3FFFF0381C7FFF1FFE0FFF1C01C71C01F803F1FF1C70071FFE0FFF1C01C71C01F80
3F1FF1C70071FFE0FFF1C01C71C01F803F1FF1C70071FFE0FFF1C01C7FFF0071C0E00FC70071FF
E0FFF1C01C7FFF0071C0E00FC70071FFE0FFF1C01C7FFF0071C0E00FC70071FFE0FFF1C01C71C0
038FFFFF8FC70071FFE0FFF1C01C71C0038FFFFF8FC70071FFE0FFF1C01C71C0038FFFFF8FC700
71FFE0FFF1FFFC71F8FC0E38E3F1C7FFF1FFE0FFF1FFFC71F8FC0E38E3F1C7FFF1FFE0FFF1FFFC
71F8FC0E38E3F1C7FFF1FFE0FFF0000071C71C71C71C71C00001FFE0FFF0000071C71C71C71C71
C00001FFE0FFF0000071C71C71C71C71C00001FFE0FFFFFFFFF1C71F8038E00FFFFFFFFFE0FFFF
FFFFF1C71F8038E00FFFFFFFFFE0FFFFFFFFF1C71F8038E00FFFFFFFFFE0FFF038FC0FC0FFFFFF
03F1C01C0FFFE0FFF038FC0FC0FFFFFF03F1C01C0FFFE0FFF038FC0FC0FFFFFF03F1C01C0FFFE0
FFFE3FFF803FE3FE3F03F03FFFF1FFE0FFFE3FFF803FE3FE3F03F03FFFF1FFE0FFFE3FFF803FE3
FE3F03F03FFFF1FFE0FFFE380001F81FFFF8FC71C00071FFE0FFFE380001F81FFFF8FC71C00071
FFE0FFFE380001F81FFFF8FC71C00071FFE0FFF038FFF03FFF8FC7E071C703F1FFE0FFF038FFF0
3FFF8FC7E071C703F1FFE0FFF038FFF03FFF8FC7E071C703F1FFE0FFFFC7000FC7FC0038E38007
E3F1FFE0FFFFC7000FC7FC0038E38007E3F1FFE0FFFFC7000FC7FC0038E38007E3F1FFE0FFF000
E3FE07FC7000FFF0001FF1FFE0FFF000E3FE07FC7000FFF0001FF1FFE0FFF000E3FE07FC7000FF
F0001FF1FFE0FFFE3F007FC0038E3F1C0FC7000FFFE0FFFE3F007FC0038E3F1C0FC7000FFFE0FF
FE3F007FC0038E3F1C0FC7000FFFE0FFFE00E3F038007038038E38FF8FFFE0FFFE00E3F0380070
38038E38FF8FFFE0FFFE00E3F038007038038E38FF8FFFE0FFFFF8E00FF8FC0E070071C01F81FF
E0FFFFF8E00FF8FC0E070071C01F81FFE0FFFFF8E00FF8FC0E070071C01F81FFE0FFF1C71FFE00
E38007E3803FFC7FFFE0FFF1C71FFE00E38007E3803FFC7FFFE0FFF1C71FFE00E38007E3803FFC
7FFFE0FFF1C0007FF81F8FFFFC71C71C01FFE0FFF1C0007FF81F8FFFFC71C71C01FFE0FFF1C000
7FF81F8FFFFC71C71C01FFE0FFFFC703FFFFE3FE0003FE3F03FFFFE0FFFFC703FFFFE3FE0003FE
3F03FFFFE0FFFFC703FFFFE3FE0003FE3F03FFFFE0FFFE00FC71C0038FC0E3FE38FF8FFFE0FFFE
00FC71C0038FC0E3FE38FF8FFFE0FFFE00FC71C0038FC0E3FE38FF8FFFE0FFFFC0E3FE3FFC0E3F
1FFE07E071FFE0FFFFC0E3FE3FFC0E3F1FFE07E071FFE0FFFFC0E3FE3FFC0E3F1FFE07E071FFE0
FFF000E07FC00001C0FC7FF81FF1FFE0FFF000E07FC00001C0FC7FF81FF1FFE0FFF000E07FC000
01C0FC7FF81FF1FFE0FFFE3F03F1C01F8E3F0071C71FFFFFE0FFFE3F03F1C01F8E3F0071C71FFF
FFE0FFFE3F03F1C01F8E3F0071C71FFFFFE0FFF1C0E07038E07FC703F0001F8FFFE0FFF1C0E070
38E07FC703F0001F8FFFE0FFF1C0E07038E07FC703F0001F8FFFE0FFFFFFFFF000E00E380381FF
1C71FFE0FFFFFFFFF000E00E380381FF1C71FFE0FFFFFFFFF000E00E380381FF1C71FFE0FFF000
007000FF8E3FFC71C71F8FFFE0FFF000007000FF8E3FFC71C71F8FFFE0FFF000007000FF8E3FFC
71C71F8FFFE0FFF1FFFC7FC0FC703F03F1FF038FFFE0FFF1FFFC7FC0FC703F03F1FF038FFFE0FF
F1FFFC7FC0FC703F03F1FF038FFFE0FFF1C01C7FC0FC0FC70070001F81FFE0FFF1C01C7FC0FC0F
C70070001F81FFE0FFF1C01C7FC0FC0FC70070001F81FFE0FFF1C01C7038FF8E071FFFC0007FFF
E0FFF1C01C7038FF8E071FFFC0007FFFE0FFF1C01C7038FF8E071FFFC0007FFFE0FFF1C01C7FF8
0071C7FF8E3803F1FFE0FFF1C01C7FF80071C7FF8E3803F1FFE0FFF1C01C7FF80071C7FF8E3803
F1FFE0FFF1FFFC71FFE3FFFF0001F81FFFFFE0FFF1FFFC71FFE3FFFF0001F81FFFFFE0FFF1FFFC
71FFE3FFFF0001F81FFFFFE0FFF000007038E38E07E3F1F81F8FFFE0FFF000007038E38E07E3F1
F81F8FFFE0FFF000007038E38E07E3F1F81F8FFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFE0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0
end
%%PageTrailer
%%Trailer
%%EOF
